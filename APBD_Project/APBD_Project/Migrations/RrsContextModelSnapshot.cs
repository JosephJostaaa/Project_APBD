// <auto-generated />
using System;
using APBD_Project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APBD_Project.Migrations
{
    [DbContext(typeof(RrsContext))]
    partial class RrsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APBD_Project.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.HasKey("ClientId");

                    b.ToTable("Client", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("APBD_Project.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareVersionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateYears")
                        .HasColumnType("int");

                    b.HasKey("ContractId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("SoftwareVersionId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("APBD_Project.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("ApplicableTo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("DECIMAL(2,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            ApplicableTo = "contract",
                            DiscountPercentage = 0.10m,
                            EndDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = 2,
                            ApplicableTo = "contract",
                            DiscountPercentage = 0.15m,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = 3,
                            ApplicableTo = "subscription",
                            DiscountPercentage = 0.20m,
                            EndDate = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("APBD_Project.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(8,2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("ContractId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("APBD_Project.Models.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("SoftwareId");

                    b.ToTable("Software");

                    b.HasData(
                        new
                        {
                            SoftwareId = 1,
                            Category = "Education",
                            Description = "Software for Java developers",
                            Name = "Intellij IDEA"
                        },
                        new
                        {
                            SoftwareId = 2,
                            Category = "Education",
                            Description = "Software for .NET developers",
                            Name = "Visual Studio"
                        },
                        new
                        {
                            SoftwareId = 3,
                            Category = "Education",
                            Description = "Software for Java developers",
                            Name = "Eclipse"
                        },
                        new
                        {
                            SoftwareId = 4,
                            Category = "Education",
                            Description = "Software for Python developers",
                            Name = "PyCharm"
                        },
                        new
                        {
                            SoftwareId = 5,
                            Category = "Education",
                            Description = "Software for JavaScript developers",
                            Name = "WebStorm"
                        });
                });

            modelBuilder.Entity("APBD_Project.Models.SoftwareVersion", b =>
                {
                    b.Property<int>("SoftwareVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareVersionId"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("SoftwareVersionId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("software_version");

                    b.HasData(
                        new
                        {
                            SoftwareVersionId = 1,
                            BasePrice = 1000m,
                            ReleaseDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 1,
                            Version = "2023.1"
                        },
                        new
                        {
                            SoftwareVersionId = 2,
                            BasePrice = 1200m,
                            ReleaseDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 2,
                            Version = "17.0.1"
                        },
                        new
                        {
                            SoftwareVersionId = 3,
                            BasePrice = 1200m,
                            ReleaseDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 2,
                            Version = "17.0.2"
                        },
                        new
                        {
                            SoftwareVersionId = 4,
                            BasePrice = 800m,
                            ReleaseDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 3,
                            Version = "4.25"
                        },
                        new
                        {
                            SoftwareVersionId = 5,
                            BasePrice = 800m,
                            ReleaseDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 3,
                            Version = "4.26"
                        },
                        new
                        {
                            SoftwareVersionId = 6,
                            BasePrice = 900m,
                            ReleaseDate = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 4,
                            Version = "2023.2"
                        },
                        new
                        {
                            SoftwareVersionId = 7,
                            BasePrice = 1100m,
                            ReleaseDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 5,
                            Version = "2023.1"
                        });
                });

            modelBuilder.Entity("APBD_Project.Models.Company", b =>
                {
                    b.HasBaseType("APBD_Project.Models.Client");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Krs")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(11)");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Address = "123 Main St, City, Country",
                            Email = "company1@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "123456789",
                            CompanyName = "Google",
                            Krs = "1234567890"
                        },
                        new
                        {
                            ClientId = 2,
                            Address = "456 Elm St, City, Country",
                            Email = "company2@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "987654321",
                            CompanyName = "Microsoft",
                            Krs = "0987654321"
                        });
                });

            modelBuilder.Entity("APBD_Project.Models.Person", b =>
                {
                    b.HasBaseType("APBD_Project.Models.Client");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(11)");

                    b.ToTable("Person", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 3,
                            Address = "789 Oak St, City, Country",
                            Email = "person3@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "555555555",
                            FirstName = "John",
                            LastName = "Doe",
                            Pesel = "12345678901"
                        },
                        new
                        {
                            ClientId = 4,
                            Address = "321 Pine St, City, Country",
                            Email = "person4@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "444444444",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Pesel = "10987654321"
                        });
                });

            modelBuilder.Entity("APBD_Project.Models.Contract", b =>
                {
                    b.HasOne("APBD_Project.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_Project.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_Project.Models.SoftwareVersion", "SoftwareVersion")
                        .WithMany("Contracts")
                        .HasForeignKey("SoftwareVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Discount");

                    b.Navigation("SoftwareVersion");
                });

            modelBuilder.Entity("APBD_Project.Models.Payment", b =>
                {
                    b.HasOne("APBD_Project.Models.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("APBD_Project.Models.SoftwareVersion", b =>
                {
                    b.HasOne("APBD_Project.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Software");
                });

            modelBuilder.Entity("APBD_Project.Models.Company", b =>
                {
                    b.HasOne("APBD_Project.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("APBD_Project.Models.Company", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APBD_Project.Models.Person", b =>
                {
                    b.HasOne("APBD_Project.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("APBD_Project.Models.Person", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APBD_Project.Models.Client", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("APBD_Project.Models.Contract", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("APBD_Project.Models.SoftwareVersion", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
